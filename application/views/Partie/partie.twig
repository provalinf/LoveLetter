{% extends "layout.twig" %}
{% block contenu %}

	<div class="container contain-background">
		<div class="row justify-content-md-center">
			<div class="col">
				<h1>Jeu {{ name }}</h1>
			</div>
		</div>
		<div class="row justify-content-md-center">
			<div class="col-">
				Cartes défaussées joueurs adverses
			</div>
		</div>
		<div class="row justify-content-md-center">
			<div class="col-" id="defausse">
			</div>
		</div>
		<div class="row justify-content-md-center">
			<div class="col">
				<img src="{{ base_url("../assets/images/verso.png") }}" onclick='clicPioche()'>
			</div>
			<div class="col-" id="main_joueur">
			</div>
			<div class="col" id="main_defausser">
			</div>
		</div>

	</div>

	{#<div id="myModal" class="modal fade">
		<div class="modal-dialog" role="document">
			<div class="modal-content">

				<div class="modal-header">
					<h5 class="modal-title">Modal title</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					<p>Modal body text goes here.</p>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-primary">Save changes</button>
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
				</div>
				</div>
			</div>
		</div>
	</div>#}
	<div id="myModal" class="modal" tabindex="-1" role="dialog">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Modal title</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">

				</div>
				{#<div class="modal-footer">
					<button type="button" class="btn btn-primary">Save changes</button>
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
				</div>#}
			</div>
		</div>
	</div>

	{#<div id="myModalCarte" class="modal" tabindex="-1" role="dialog">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Modal title</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					<p>Modal body text goes here.</p>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-primary">Save changes</button>
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
				</div>
			</div>
		</div>
	</div>#}


{% endblock %}

{% block javascript %}
	<script content="javascript">
		var actualisationInterval = 2000;
		var intervals = [];

		function refreshTimeConnect() {
			$.getJSON("{{ base_url('Game_c/refreshTimeConnect') }}", function (result) {
				console.log("retour:" + result);
				if (!result) {
					alert('Une erreur est survenue');
					clearAllInterval();
				}
			});
			console.log("actualisation");

			$.getJSON("{{ base_url('Game_c/play') }}", function (result) {
				console.log("retour:" + JSON.stringify(result));
				if (result['erreur']) {
					alert('Une erreur est survenue');
					clearAllInterval();
				}
			});

			refreshMain();

			/*$.getJSON("{{ base_url('Game_c/afficherDefausseAdversaire') }}", function (result) {
				cartes_joueur = result;
				//console.log("cartes:" + JSON.stringify(result));
				console.log(cartes_joueur['main']);
				console.log(cartes_joueur["main"][0]['ID_CARTE']);

				$("#main_joueur").html("<img src='../../"+cartes_joueur["main"][0]['IMAGE']+"' height='300' onclick='clicMain(\""+cartes_joueur["main"][0]['ID_CARTE']+"\")'>");

				if (result['erreur']) {
					alert('Une erreur est survenue');
					clearAllInterval();
				}
			});*/
		}

		function refreshMain() {
			$.getJSON("{{ base_url('Game_c/afficherCartesJoueur') }}", function (result) {
				cartes_joueur = result;
				//console.log("cartes:" + JSON.stringify(result));
				//console.log(cartes_joueur['main']);
				//console.log(cartes_joueur["main"][0]['ID_CARTE']);
				//console.log("taille tableau" + cartes_joueur["main"].length);
				for (var i = 0; i < cartes_joueur["main"].length; i++) {
					console.log("hop");
					if (i > 1) {
						$("#main_joueur").html("<img src='../../" + cartes_joueur["main"][i]['IMAGE'] + "' height='300' onclick='clicMain(" + cartes_joueur["main"][i]['ID_CARTE'] + ")'>");
					} else {
						$("#main_defausser").html("<img src='../../" + cartes_joueur["main"][i]['IMAGE'] + "' height='300' onclick='clicMain(" + cartes_joueur["main"][i]['ID_CARTE'] + ")'>");
					}
				}

				$("#defausse").append("");	// vide affichage defausse
				for (var j = 0; j < cartes_joueur["defausse"].length; j++) {
					$("#defausse").append("<img src='../../" + cartes_joueur["main"][j]['IMAGE'] + "' height='300' onclick='clicMain(" + cartes_joueur["main"][j]['ID_CARTE'] + ")'>");
				}

				if (result['erreur']) {
					alert('Une erreur est survenue');
					clearAllInterval();
				}
			});
		}

		function clicPioche() {
			a_pioche = true;
			$.getJSON("{{ base_url('Game_c/piocher') }}", function (result) {
				console.log(result);
				if (result['erreur']) {
					alert('Une erreur est survenue');
					clearAllInterval();
				} else {
					refreshMain();
				}
			});
		}

		function clicMain(id_carte) {
			console.log(id_carte);
			action(id_carte);
		}

		function clearAllInterval() {
			intervals.forEach(function (interval) {
				clearInterval(interval);
			});
		}

		function launchModal(id, titre, contenu) {
			var css = ['box-success', 'box-danger', 'box-info'];
			var modal = $('#myModal');
			//modal.children().children().children().removeClass();
			modal.children().children().children().addClass("box " + css[id]);
			$('.modal-title').html(titre);
			$('.modal-body').html(contenu);
			/*modal.children().children().children().children(".modal-header").children(".modal-title").html(titre);
			modal.children().children().children().children(".modal-body").children().html(contenu);*/
			modal.modal('show');
		}

		function action_confirm(id_carte, id_cible) {

			switch (id_carte) {
				case 1:
					$.getJSON("{{ base_url('Game_c/getCartesSansGarde') }}", function (result) {
						tab = JSON.parse(result);
						carte_selected = $('#myModalCarte').modal('show'); // popup qui propose les cartes
						if (!result) {

						}
					});
			}
		}

		function garde(id_cible) {
			$('#myModal').modal('hide');
			console.log("clic cible");
			$.getJSON("{{ base_url('Game_c/getCartesSansGarde') }}", function (result) {
				var contenu = "";
				for (var i = 0; i < result.length; i++) {
					contenu += "<img src='../../" + result[i]['image'] + "' height='300' onclick='garde_action(\"" + id_cible + "\"," + result[i]['id_carte'] + ")'>";
				}
				launchModal(1, "Deviner la carte", contenu);
			});
		}

		function garde_action(id_cible, id_carte) {
			$('#myModal').modal('hide');
			console.log(id_cible+" "+id_carte);
			$.getJSON("{{ base_url('Game_c/compareCarteJoueur/') }}"+id_cible+"/"+id_carte, function (result) {
				if (result) {
					console.log("ok");
				}else {
					console.log("pas ok");
				}
			});
		}

		function action(id_carte) {
			switch (id_carte) {
				case 1:
					//Garde
					var tabAd;
					var joueur_selected;
					var carte_selected;
					var tab;
					$.getJSON("{{ base_url('Game_c/getAdversaires') }}", function (result) {
						console.log(result);
						/*joueur_selected = */
						var contenu = "";
						for (var i = 0; i < result.length; i++) {
							contenu += '<button type="button" class="btn btn-dark" onclick=garde("' + result[i]['LOGIN'] + '")>' + result[i]['LOGIN'] + '</button>';
						}
						launchModal(1, "Selectionner la cible", contenu);

						if (!result) {

						}
					});

					break;
				case 2:
					//Pretre
					$.getJSON("{{ base_url('Game_c/getAdversaires') }}", function (result) {
						if (!result) {
							var tab = JSON.parse(result);
							var joueur_selected = $('#myModal').modal('show'); // popup qui propose les joueurs
							$.ajax({
								url: "{{ base_url('Game_c/voirMain') }}",
								type: 'POST',
								contentType: "application/json",
								dataType: 'json',
								data: JSON.stringify(joueur_selected),
								success: function (msg) {
									alert(msg);
									var cartes_adversaire = JSON.parse(msg);
									console.log(cartes_adversaire);
								}
							});
						}
					});
					break;
				case 3:
					//Baron
					$.getJSON("{{ base_url('Game_c/getAdversaires') }}", function (result) {
						if (!result) {
							var tab = JSON.parse(result);
							var joueur_selected = $('#myModal').modal('show'); // popup qui propose les joueurs
							$.ajax({
								url: "{{ base_url('Game_c/getJoueurPlusPetiteCarte') }}",
								type: 'POST',
								contentType: "application/json",
								dataType: 'json',
								data: JSON.stringify(joueur_selected),
								success: function (msg) {
									alert(msg);
									var perdant = JSON.parse(msg);
									console.log(perdant);
								}
							});
						}
					});
					break;
				case 4:
					//Servante
					break;
				case 5:
					//Prince
					break;
				case 6:
					//Roi
					$.getJSON("{{ base_url('Game_c/getAdversaires') }}", function (result) {
						if (!result) {
							var tab = JSON.parse(result);
							var joueur_selected = $('#myModal').modal('show'); // popup qui propose les joueurs
							$.ajax({
								url: "{{ base_url('Game_c/echangeMain') }}",
								type: 'POST',
								contentType: "application/json",
								dataType: 'json',
								data: JSON.stringify(joueur_selected),
								success: function (msg) {
									alert(msg);
									var cartes_adversaire = JSON.parse(msg);
									console.log(cartes_adversaire);
								}
							});
						}
					});
					break;
				case 7:
					//Comtesse
					break;
				case 8:
					//Princesse
					$.getJSON("{{ base_url('Game_c/deleteMain') }}", function (result) {
					});
					break;
				default:
					console.log("Carte inexistante");
			}
		}

		$(document).ready(function () {
				//intervals[0] = window.setInterval(refreshTimeConnect, actualisationInterval);
			}
		);
	</script>
{% endblock %}